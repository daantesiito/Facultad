A.
	1. PROGRAMMING PARADIGM
	2. PROGRAM STATE
	3. MACHINE CODE
	4. HIGHER LEVEL IMPERATIVE LANGUAGES
	5. FAMILIAR CONCEPTS
B.
	1. ES UN PARADIGMA DE PROGRAMACION QUE DESCRIBE LA COMPUTACION EN TERMINO AL ESTADO DEL PROGRAMA Y SUS CAMBIOS.
	2. EXPRESAN COMANDOS A EJECUTAR / LOS PROGRAMAS IMPERATIVOS SON UNA SECUANCIA DE COMANDOS EJECUTADOS POR LA COMPUTADORA.
	3. SE DIFERENCIAN YA QUE NO SON UNA SECUENCIA DE ESTADOS Y NO TIENEN UN ESTADO GLOBAL. LOS LENGUAJES LOGICOS SON PENSADOS COMO LA DEFINICION DE QUE ES LO QUE SE VA A COMPUTAR, EN VEZ DE COMO SE VA A COMPUTAR.
	4. DESDE UNA PERSPECTIVA DE BAJO NIVEL, EL ESTADO DEL PROGRAMA ES DEFINIDO POR EL CONTENIDO DE LA MEMORIA Y LOS ESTADOS SON INSTRUCCIONES EN EL LENGUAJE NATIVO DE LA COMPUTADORA. EN LENGUAJES DE ALTO NIVEL, SE USAN VARIABLES Y ESTADOS MAS COMPLEJOS, AUNQUE SIGUEN LOS DOS EL MISMO ESQUEMA.

C.
	EL ASIGNAMIENTO DE ESTADOS, EN GENERAL, EJECUTAN UNA OPERACION EN INFORMACION UBICADA EN MEMORIA Y GUARDA LOS RESUTLADOS EN MEMORIA PARA LUEGO USARLOS.
	LENGUAJES IMPERATIVOS DE ALTO NIVEL, ADEMAS, PERMITEN LA EVALUACION DE EXPRESIONES COMPLEJAS QUE PUEDEN CONSISTIR EN UNA COMBINACION DE OPERACIONES ARITMETICAS Y FUNCIONES EVALUADAS,
	Y EL ASIGNAMIENTO DEL VALOR RESULTADO EN MEMORIA. ESTADOS REPETITIVOS PERMITEN A LA SECUENCIA DE ESTADOS SER EJECUTADAS MULTIPLES VECES.
	ESTADOS REPETITIVOS PUEDEN EJECUTARSE UN NUMERO PREDEFINIDO DE VECES, LOS ESTADOS QUE CONTIENEN, O PUEDEN EJECUTARSE REPETITIVAMENTE HASTA QUE UNA CONDICION CAMBIE.
	LA RAMIFICACION DE ESTADOS CONDICIONALES PERMITE A UN BLOQUE DE ESTADOS SE EJECUTADOS SI UNA CONDICION SE CUMPLE.
	DE LA OTRA MANERA, LOS ESTADOS SE SALTEAN Y LA SECUENCIA DE EJECUCION CONTINUA DESDE LE ESTADOM SIGUIENTE DEL BLOQUE.
	LA RAMIFICACION DE ESTADOS INCONDICIONALES PERMITEN A LA SECUENCIA DE EJECUCION A SER TRANSFERIDA A OTRA PARTE DEL PROGRAMA.
	ESTO INCLUYE EL SALTO, LLAMADO "IR A" ("GOTO") EN MUCHOS LENGUAJES, Y EL SUBPROGRAMA O EL LLAMADO AL PROCESO.






	DONDE DICE ESTADOS ES ""SECUENCIA""